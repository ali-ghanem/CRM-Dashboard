// <auto-generated />
using System;
using CRM_Dashboard.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CRM_Dashboard.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20190909074707_RELATION_FilesTable")]
    partial class RELATION_FilesTable
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CRM_Dashboard.Models.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Cities");
                });

            modelBuilder.Entity("CRM_Dashboard.Models.CompaniesType", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("CompanyId");

                    b.Property<long>("CompanyTypeId");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("CompanyTypeId");

                    b.ToTable("CompaniesTypes");
                });

            modelBuilder.Entity("CRM_Dashboard.Models.Company", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address");

                    b.Property<int>("CityId");

                    b.Property<int>("CountryId");

                    b.Property<long>("CustomerId");

                    b.Property<int?>("DivisionNumber");

                    b.Property<string>("Email")
                        .IsRequired();

                    b.Property<string>("Location")
                        .IsRequired();

                    b.Property<int>("Mobile");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<string>("Notes");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.HasIndex("CountryId");

                    b.HasIndex("CustomerId");

                    b.ToTable("Companies");
                });

            modelBuilder.Entity("CRM_Dashboard.Models.CompanyType", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("CompanyTypes");
                });

            modelBuilder.Entity("CRM_Dashboard.Models.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Countries");
                });

            modelBuilder.Entity("CRM_Dashboard.Models.Customer", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address");

                    b.Property<int>("CityId");

                    b.Property<int>("CountryId");

                    b.Property<string>("FirstName")
                        .IsRequired();

                    b.Property<int>("Gender");

                    b.Property<long>("JobTitleId");

                    b.Property<string>("LastName")
                        .IsRequired();

                    b.Property<int?>("Nationality1Id");

                    b.Property<int?>("Nationality2Id");

                    b.Property<string>("Notes");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.HasIndex("CountryId");

                    b.HasIndex("JobTitleId");

                    b.HasIndex("Nationality1Id");

                    b.HasIndex("Nationality2Id");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("CRM_Dashboard.Models.Deal", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Ammount");

                    b.Property<DateTime>("CloseDate");

                    b.Property<int>("Currency");

                    b.Property<string>("DealName")
                        .IsRequired();

                    b.Property<long>("EmployeeId");

                    b.Property<string>("Notes");

                    b.Property<long>("ProductId");

                    b.Property<long>("ProjectId");

                    b.Property<int>("TypePayment");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("ProductId");

                    b.HasIndex("ProjectId");

                    b.ToTable("Deals");
                });

            modelBuilder.Entity("CRM_Dashboard.Models.DealPayment", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Currency");

                    b.Property<long>("DealId");

                    b.Property<DateTime>("NextPaymentDate");

                    b.Property<decimal>("Payment");

                    b.Property<DateTime>("PaymentDate");

                    b.Property<decimal>("PriceExchange");

                    b.HasKey("Id");

                    b.HasIndex("DealId");

                    b.ToTable("DealPayments");
                });

            modelBuilder.Entity("CRM_Dashboard.Models.DealStage", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("DealId");

                    b.Property<int>("DealStageName");

                    b.Property<string>("Notes");

                    b.Property<DateTime>("StageDate");

                    b.HasKey("Id");

                    b.HasIndex("DealId");

                    b.ToTable("DealStages");
                });

            modelBuilder.Entity("CRM_Dashboard.Models.Employee", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address");

                    b.Property<DateTime>("BirthDate");

                    b.Property<int>("CityId");

                    b.Property<int>("CountryId");

                    b.Property<string>("FirstName")
                        .IsRequired();

                    b.Property<int>("Gender");

                    b.Property<long>("JobTitleId");

                    b.Property<string>("LastName")
                        .IsRequired();

                    b.Property<int>("Nationality1Id");

                    b.Property<int>("Nationality2Id");

                    b.Property<string>("Notes");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.HasIndex("CountryId");

                    b.HasIndex("JobTitleId");

                    b.HasIndex("Nationality1Id");

                    b.HasIndex("Nationality2Id");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("CRM_Dashboard.Models.File", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AttachmentType");

                    b.Property<long?>("CompanyId");

                    b.Property<long?>("CustomerId");

                    b.Property<long?>("DealId");

                    b.Property<long?>("DealPaymentId");

                    b.Property<string>("Description");

                    b.Property<string>("FileExtension")
                        .IsRequired();

                    b.Property<string>("FileName")
                        .IsRequired();

                    b.Property<string>("FilePath")
                        .IsRequired();

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<long>("OwnerId");

                    b.Property<int>("OwnerType");

                    b.Property<long?>("ProjectId");

                    b.Property<long?>("VisitId");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("DealId");

                    b.HasIndex("DealPaymentId");

                    b.HasIndex("ProjectId");

                    b.HasIndex("VisitId");

                    b.ToTable("Files");
                });

            modelBuilder.Entity("CRM_Dashboard.Models.JobTitle", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("JobTitles");
                });

            modelBuilder.Entity("CRM_Dashboard.Models.Nationality", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Nationalities");
                });

            modelBuilder.Entity("CRM_Dashboard.Models.Product", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("CRM_Dashboard.Models.Project", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("CustomerId");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("CRM_Dashboard.Models.ProjectType", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("ProjectTypes");
                });

            modelBuilder.Entity("CRM_Dashboard.Models.ProjectsType", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("ProjectId");

                    b.Property<long>("ProjectTypeId");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.HasIndex("ProjectTypeId");

                    b.ToTable("ProjectsTypes");
                });

            modelBuilder.Entity("CRM_Dashboard.Models.Service", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Services");
                });

            modelBuilder.Entity("CRM_Dashboard.Models.Visit", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CityId");

                    b.Property<string>("CompanyEmail");

                    b.Property<int>("CompanyMobile");

                    b.Property<string>("CompanyName");

                    b.Property<long>("CompanyTypeId");

                    b.Property<int>("CountryId");

                    b.Property<string>("CustomerName")
                        .IsRequired();

                    b.Property<string>("Domain");

                    b.Property<string>("Email")
                        .IsRequired();

                    b.Property<long>("EmployeeId");

                    b.Property<int>("Gender");

                    b.Property<long>("JobTitleId");

                    b.Property<string>("Location");

                    b.Property<int?>("Mobile");

                    b.Property<string>("Notes");

                    b.Property<DateTime>("VisitDate");

                    b.Property<int>("VisitRating");

                    b.Property<decimal>("VisitTime");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.HasIndex("CompanyTypeId");

                    b.HasIndex("CountryId");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("JobTitleId");

                    b.ToTable("Visits");
                });

            modelBuilder.Entity("CRM_Dashboard.Models.VisitService", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("ServiceId");

                    b.Property<long>("VisitId");

                    b.Property<long?>("VistId");

                    b.HasKey("Id");

                    b.HasIndex("ServiceId");

                    b.HasIndex("VisitId");

                    b.ToTable("VisitServices");
                });

            modelBuilder.Entity("CRM_Dashboard.Models.CompaniesType", b =>
                {
                    b.HasOne("CRM_Dashboard.Models.Company", "Company")
                        .WithMany("CompaniesTypes")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("CRM_Dashboard.Models.CompanyType", "CompanyType")
                        .WithMany("CompaniesTypes")
                        .HasForeignKey("CompanyTypeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("CRM_Dashboard.Models.Company", b =>
                {
                    b.HasOne("CRM_Dashboard.Models.City", "City")
                        .WithMany()
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("CRM_Dashboard.Models.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("CRM_Dashboard.Models.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("CRM_Dashboard.Models.Customer", b =>
                {
                    b.HasOne("CRM_Dashboard.Models.City", "City")
                        .WithMany()
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("CRM_Dashboard.Models.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("CRM_Dashboard.Models.JobTitle", "JobTitle")
                        .WithMany()
                        .HasForeignKey("JobTitleId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("CRM_Dashboard.Models.Nationality", "Nationality1")
                        .WithMany()
                        .HasForeignKey("Nationality1Id");

                    b.HasOne("CRM_Dashboard.Models.Nationality", "Nationality2")
                        .WithMany()
                        .HasForeignKey("Nationality2Id");
                });

            modelBuilder.Entity("CRM_Dashboard.Models.Deal", b =>
                {
                    b.HasOne("CRM_Dashboard.Models.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("CRM_Dashboard.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("CRM_Dashboard.Models.Project", "Project")
                        .WithMany()
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("CRM_Dashboard.Models.DealPayment", b =>
                {
                    b.HasOne("CRM_Dashboard.Models.Deal", "Deal")
                        .WithMany()
                        .HasForeignKey("DealId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("CRM_Dashboard.Models.DealStage", b =>
                {
                    b.HasOne("CRM_Dashboard.Models.Deal", "Deal")
                        .WithMany()
                        .HasForeignKey("DealId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("CRM_Dashboard.Models.Employee", b =>
                {
                    b.HasOne("CRM_Dashboard.Models.City", "City")
                        .WithMany()
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("CRM_Dashboard.Models.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("CRM_Dashboard.Models.JobTitle", "JobTitle")
                        .WithMany()
                        .HasForeignKey("JobTitleId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("CRM_Dashboard.Models.Nationality", "Nationality1")
                        .WithMany()
                        .HasForeignKey("Nationality1Id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("CRM_Dashboard.Models.Nationality", "Nationality2")
                        .WithMany()
                        .HasForeignKey("Nationality2Id")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("CRM_Dashboard.Models.File", b =>
                {
                    b.HasOne("CRM_Dashboard.Models.Company")
                        .WithMany("Files")
                        .HasForeignKey("CompanyId");

                    b.HasOne("CRM_Dashboard.Models.Customer")
                        .WithMany("Files")
                        .HasForeignKey("CustomerId");

                    b.HasOne("CRM_Dashboard.Models.Deal")
                        .WithMany("Files")
                        .HasForeignKey("DealId");

                    b.HasOne("CRM_Dashboard.Models.DealPayment")
                        .WithMany("Files")
                        .HasForeignKey("DealPaymentId");

                    b.HasOne("CRM_Dashboard.Models.Project")
                        .WithMany("Files")
                        .HasForeignKey("ProjectId");

                    b.HasOne("CRM_Dashboard.Models.Visit")
                        .WithMany("Files")
                        .HasForeignKey("VisitId");
                });

            modelBuilder.Entity("CRM_Dashboard.Models.Project", b =>
                {
                    b.HasOne("CRM_Dashboard.Models.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("CRM_Dashboard.Models.ProjectsType", b =>
                {
                    b.HasOne("CRM_Dashboard.Models.Project", "Project")
                        .WithMany("ProjectsTypes")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("CRM_Dashboard.Models.ProjectType", "ProjectType")
                        .WithMany("ProjectsTypes")
                        .HasForeignKey("ProjectTypeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("CRM_Dashboard.Models.Visit", b =>
                {
                    b.HasOne("CRM_Dashboard.Models.City", "City")
                        .WithMany()
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("CRM_Dashboard.Models.CompanyType", "CompanyType")
                        .WithMany()
                        .HasForeignKey("CompanyTypeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("CRM_Dashboard.Models.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("CRM_Dashboard.Models.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("CRM_Dashboard.Models.JobTitle", "JobTitle")
                        .WithMany()
                        .HasForeignKey("JobTitleId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("CRM_Dashboard.Models.VisitService", b =>
                {
                    b.HasOne("CRM_Dashboard.Models.Service", "Service")
                        .WithMany("VisitServices")
                        .HasForeignKey("ServiceId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("CRM_Dashboard.Models.Visit", "Visit")
                        .WithMany("VisitServices")
                        .HasForeignKey("VisitId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
